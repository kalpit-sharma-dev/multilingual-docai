# PS-05 Competition Configuration
# Stage 1: Document Layout Detection

competition:
  name: "PS-05: Intelligent Multilingual Document Understanding"
  stage: 1
  deadline: "2025-11-05"
  evaluation_date: "2025-11-04"
  
  # Competition requirements
  requirements:
    layout_classes: 6
    output_format: "JSON"
    evaluation_metric: "mAP"
    iou_threshold: 0.5
    weight_classification_localization: 100

# System configuration
system:
  name: "PS-05 Document AI System"
  version: "1.0.0"
  environment: "competition"
  debug: false
  
  # Competition evaluation specs
  evaluation_specs:
    os: "Ubuntu 24.04 LTS"
    cpu: "48+ cores"
    ram: "256+ GB"
    gpu: "A-100, 40/80 GB"
    demo_duration: "2 hours"

# Model configuration for Stage 1
models:
  layout_detector:
    type: "yolo"
    backbone: "yolov8x"
    classes:
      0: "Background"
      1: "Text"
      2: "Title"
      3: "List"
      4: "Table"
      5: "Figure"
    
    # Training parameters
    training:
      epochs: 100
      batch_size: 16
      learning_rate: 0.01
      img_size: 640
      patience: 20
      
    # Inference parameters
    inference:
      confidence_threshold: 0.5
      nms_threshold: 0.45
      max_det: 300
      
    # Model paths
    paths:
      weights: "models/yolov8x.pt"
      custom_weights: "models/layout_detector.pt"
      cache_dir: "models/cache"

# Data configuration
data:
  # Supported formats
  input_formats: ["jpg", "jpeg", "png", "bmp", "tiff"]
  
  # Dataset configuration
  dataset:
    train_dir: "data/train"
    val_dir: "data/val"
    test_dir: "data/test"
    
  # Preprocessing
  preprocessing:
    deskew: true
    denoise: true
    resize: true
    target_size: [640, 640]
    normalize: true
    
  # Augmentation
  augmentation:
    enabled: true
    rotation: [-15, 15]
    brightness: [0.8, 1.2]
    contrast: [0.8, 1.2]
    noise: [0, 0.1]

# Output configuration
output:
  format: "JSON"
  structure:
    image_id: "string"
    predictions: "array"
    processing_time: "float"
    
  # Bounding box format
  bbox_format: [x, y, w, h]  # [left, top, width, height]
  
  # Confidence thresholds
  confidence:
    min: 0.1
    max: 1.0
    default: 0.5

# API configuration
api:
  host: "0.0.0.0"
  port: 8000
  workers: 4
  
  # Rate limiting
  rate_limit:
    enabled: true
    requests_per_minute: 60
    
  # CORS
  cors:
    enabled: true
    origins: ["*"]
    
  # Health check
  health_check:
    enabled: true
    interval: 30
    timeout: 10

# Docker configuration
docker:
  # Backend service
  backend:
    image: "ps05-backend"
    container_name: "ps05-document-ai-backend"
    ports:
      - "8000:8000"
    volumes:
      - "./uploads:/app/uploads"
      - "./models:/app/models"
      - "./data:/app/data"
      - "./outputs:/app/outputs"
      - "./logs:/app/logs"
      
  # Frontend service
  frontend:
    image: "ps05-frontend"
    container_name: "ps05-document-ai-frontend"
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
      
  # Monitoring services
  monitoring:
    prometheus:
      port: "9090:9090"
    grafana:
      port: "3000:3000"
      admin_password: "ps05_admin_2025"

# Evaluation configuration
evaluation:
  # Stage 1 evaluation metrics
  stage1:
    primary_metric: "mAP"
    iou_thresholds: [0.5, 0.75]
    class_metrics: true
    confusion_matrix: true
    
  # Performance metrics
  performance:
    inference_time: true
    memory_usage: true
    gpu_utilization: true
    
  # Output formats
  output_formats:
    - "json"
    - "csv"
    - "html"

# Logging configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # File logging
  file:
    enabled: true
    path: "logs/ps05.log"
    max_size: "100MB"
    backup_count: 5
    
  # Console logging
  console:
    enabled: true
    level: "INFO"

# Security configuration
security:
  # API authentication
  authentication:
    enabled: false  # Disabled for competition demo
    
  # Input validation
  validation:
    enabled: true
    max_file_size: "50MB"
    allowed_extensions: ["jpg", "jpeg", "png", "bmp", "tiff"]
    
  # Rate limiting
  rate_limiting:
    enabled: true
    max_requests: 100
    window_seconds: 60
